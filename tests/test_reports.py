import json
import os

import pandas as pd
import pytest

from config import ROOT_DIR
from src.reports import filtered_by_category, filtered_by_date, log, spent_by_category

test_data = [
    {
        "Дата операции": "01.10.2023 17:53:24",
        "Сумма операции": -152,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -47.85,
        "Категория": "Каршеринг",
    },
    {
        "Дата операции": "15.10.2023 17:53:24",
        "Сумма операции": -10385,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -101,
        "Категория": "Супермаркет",
    },
    {
        "Дата операции": "17.10.2023 17:53:24",
        "Сумма операции": -52,
        "Категория": "Супермаркет",
    },
    {
        "Дата операции": "27.10.2023 17:53:24",
        "Сумма операции": -887.65,
        "Категория": "Детские товары",
    },
    {
        "Дата операции": "01.10.2023 17:53:24",
        "Сумма операции": -152,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -47.85,
        "Категория": "Каршеринг",
    },
    {
        "Дата операции": "15.10.2023 17:53:24",
        "Сумма операции": -10385,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -101,
        "Категория": "Супермаркет",
    },
    {
        "Дата операции": "17.10.2023 17:53:24",
        "Сумма операции": -52,
        "Категория": "Супермаркет",
    },
    {
        "Дата операции": "27.10.2023 17:53:24",
        "Сумма операции": -887.65,
        "Категория": "Детские товары",
    },
]

result_category_1 = [
    {
        "Дата операции": "01.10.2023 17:53:24",
        "Сумма операции": -152,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "15.10.2023 17:53:24",
        "Сумма операции": -10385,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "01.10.2023 17:53:24",
        "Сумма операции": -152,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "15.10.2023 17:53:24",
        "Сумма операции": -10385,
        "Категория": "Фастфуд",
    },
]

result_category_2 = [
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -47.85,
        "Категория": "Каршеринг",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -47.85,
        "Категория": "Каршеринг",
    },
]


@pytest.mark.parametrize(
    "data, category, expected",
    [
        (test_data, "Фастфуд", result_category_1),
        (test_data, "Каршеринг", result_category_2),
        (test_data, "Яблоки", []),
    ],
)
def test_filtered_by_category(data, category, expected):
    assert filtered_by_category(category, data) == expected


result_date_1 = [
    {
        "Дата операции": "01.10.2023 17:53:24",
        "Сумма операции": -152,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -47.85,
        "Категория": "Каршеринг",
    },
    {
        "Дата операции": "15.10.2023 17:53:24",
        "Сумма операции": -10385,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -101,
        "Категория": "Супермаркет",
    },
    {
        "Дата операции": "17.10.2023 17:53:24",
        "Сумма операции": -52,
        "Категория": "Супермаркет",
    },
    {
        "Дата операции": "27.10.2023 17:53:24",
        "Сумма операции": -887.65,
        "Категория": "Детские товары",
    },
    {
        "Дата операции": "01.10.2023 17:53:24",
        "Сумма операции": -152,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -47.85,
        "Категория": "Каршеринг",
    },
    {
        "Дата операции": "15.10.2023 17:53:24",
        "Сумма операции": -10385,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -101,
        "Категория": "Супермаркет",
    },
    {
        "Дата операции": "17.10.2023 17:53:24",
        "Сумма операции": -52,
        "Категория": "Супермаркет",
    },
    {
        "Дата операции": "27.10.2023 17:53:24",
        "Сумма операции": -887.65,
        "Категория": "Детские товары",
    },
]

result_date_2 = [
    {
        "Дата операции": "01.10.2023 17:53:24",
        "Сумма операции": -152,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -47.85,
        "Категория": "Каршеринг",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -101,
        "Категория": "Супермаркет",
    },
    {
        "Дата операции": "01.10.2023 17:53:24",
        "Сумма операции": -152,
        "Категория": "Фастфуд",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -47.85,
        "Категория": "Каршеринг",
    },
    {
        "Дата операции": "07.10.2023 17:53:24",
        "Сумма операции": -101,
        "Категория": "Супермаркет",
    },
]


@pytest.mark.parametrize(
    "data, date, expected",
    [
        (test_data, "2023-10-30", result_date_1),
        (test_data, "2023-10-07", result_date_2),
        (test_data, "2022-06-06", []),
    ],
)
def test_filtered_by_date(data, date, expected):
    assert filtered_by_date(data, date) == expected


test_data_df = pd.DataFrame(
    [
        {
            "Дата операции": "01.10.2023 17:53:24",
            "Сумма операции": -152.25,
            "Категория": "Фастфуд",
        },
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -47.85,
            "Категория": "Каршеринг",
        },
        {
            "Дата операции": "15.10.2023 17:53:24",
            "Сумма операции": -10385,
            "Категория": "Фастфуд",
        },
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -101,
            "Категория": "Супермаркет",
        },
        {
            "Дата операции": "17.10.2023 17:53:24",
            "Сумма операции": -52,
            "Категория": "Супермаркет",
        },
        {
            "Дата операции": "27.10.2023 17:53:24",
            "Сумма операции": -887.65,
            "Категория": "Детские товары",
        },
        {
            "Дата операции": "11.10.2023 17:53:24",
            "Сумма операции": -152.75,
            "Категория": "Фастфуд",
        },
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -47.85,
            "Категория": "Каршеринг",
        },
        {
            "Дата операции": "15.10.2023 17:53:24",
            "Сумма операции": -10385,
            "Категория": "Фастфуд",
        },
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -101,
            "Категория": "Супермаркет",
        },
        {
            "Дата операции": "17.10.2023 17:53:24",
            "Сумма операции": -52,
            "Категория": "Супермаркет",
        },
        {
            "Дата операции": "27.10.2023 17:53:24",
            "Сумма операции": -887.65,
            "Категория": "Детские товары",
        },
    ]
)

result_1 = pd.DataFrame(
    [
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -47.85,
            "Категория": "Каршеринг",
        },
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -47.85,
            "Категория": "Каршеринг",
        },
    ]
)

result_2 = pd.DataFrame(
    [
        {
            "Дата операции": "27.10.2023 17:53:24",
            "Сумма операции": -887.65,
            "Категория": "Детские товары",
        },
        {
            "Дата операции": "27.10.2023 17:53:24",
            "Сумма операции": -887.65,
            "Категория": "Детские товары",
        },
    ]
)

ddd = [
    (test_data_df, "Каршеринг", "2023-10-30", result_1),
    (test_data_df, "Детские товары", "2023-10-27", result_2),
]


@pytest.mark.parametrize(
    "data, category, date, expected",
    [
        (test_data_df, "Каршеринг", "2023-10-30", result_1),
        (test_data_df, "Детские товары", "2023-10-27", result_2),
    ],
)
def test_spent_by_category(data, category, date, expected):
    result = spent_by_category(data, category, date)
    assert result.equals(expected)


test_data_for_log = pd.DataFrame(
    [
        {
            "Дата операции": "01.10.2023 17:53:24",
            "Сумма операции": -152,
            "Категория": "Фастфуд",
        },
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -47.85,
            "Категория": "Каршеринг",
        },
        {
            "Дата операции": "15.10.2023 17:53:24",
            "Сумма операции": -10385,
            "Категория": "Фастфуд",
        },
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -101,
            "Категория": "Супермаркет",
        },
        {
            "Дата операции": "17.10.2023 17:53:24",
            "Сумма операции": -52,
            "Категория": "Супермаркет",
        },
        {
            "Дата операции": "27.10.2023 17:53:24",
            "Сумма операции": -887.65,
            "Категория": "Детские товары",
        },
        {
            "Дата операции": "01.10.2023 17:53:24",
            "Сумма операции": -152,
            "Категория": "Фастфуд",
        },
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -47.85,
            "Категория": "Каршеринг",
        },
        {
            "Дата операции": "15.10.2023 17:53:24",
            "Сумма операции": -10385,
            "Категория": "Фастфуд",
        },
        {
            "Дата операции": "07.10.2023 17:53:24",
            "Сумма операции": -101,
            "Категория": "Супермаркет",
        },
        {
            "Дата операции": "17.10.2023 17:53:24",
            "Сумма операции": -52,
            "Категория": "Супермаркет",
        },
        {
            "Дата операции": "27.10.2023 17:53:24",
            "Сумма операции": -887.65,
            "Категория": "Детские товары",
        },
    ]
)


@log()
def func(data):
    return pd.DataFrame(data)


@pytest.mark.parametrize("data, expected", [(test_data_for_log, test_data_for_log)])
def test_func(data, expected):
    result = func(data)
    with open(os.path.join(ROOT_DIR, "log_file.json"), "r") as file:
        result_file = json.load(file)
    assert result.equals(expected)
    assert result_file == expected.to_dict(orient="records")
